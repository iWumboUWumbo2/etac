# eth test script
#
# This file is a test script for eth (etac Test Harness).  It
# conforms to the following grammar:
#
#   ScriptFile      ::= Commands+
#   Command         ::= build
#                     | CompilerTest
#   CompilerTest    ::= TestKind (\(TestName\))? ([TestPath])? ("CmdLineArgs")?
#                           { (FileTest;)* }
#   TestKind        ::= etac
#   TestName        ::= LitString
#   FileTest        ::= Filenames Description? FailureSet?
#   Filenames       ::= Filename+
#   Description     ::= LitString
#   FailureSet      ::= Failure (, Failure)*
#   Failure         ::= \( ErrorKind \)
#                     | \( ErrorKind, LitString \)
#
#   TestPath        :   the path to the test files, enclosed in quotes,
#                       relative to the path given in eth's -testpath flag.
#   CmdLineArgs     :   command-line arguments for etac
#   Filename        :   the name of a file, interpreted from TestPath.
#   LitString       :   a literal string, enclosed in quotes.
#   ErrorKind       :   one of, or a unique prefix of one of the following
#                       strings: "Leetacal Error", "Syntax Error", or
#                       "Semantic Error".
#
# eth runs the commands in order of appearance.

# build compiler first
build

etac ("Test --help") "--help" {
    ;
}

etac ("Test --irgen") "-libpath $(testpath) --irgen" {
    if02.eta;
    if03.eta;
    if04.eta;
    localdecl13.eta;
    localdecl14.eta;
    multiassign06.eta;
    multiassign07.eta;
    multiassign08.eta;
    multiret08.eta;
    while01.eta;
}

etac ("Test --irgen -O") "-libpath $(testpath) --irgen -O" {
    if02.eta;
    if03.eta;
    if04.eta;
    localdecl13.eta;
    localdecl14.eta;
    multiassign06.eta;
    multiassign07.eta;
    multiassign08.eta;
    multiret08.eta;
    while01.eta;
}

etac ("Test -target linux") "-libpath $(testpath) -target linux" {
    if02.eta;
    if03.eta;
    if04.eta;
    localdecl13.eta;
    localdecl14.eta;
    multiassign06.eta;
    multiassign07.eta;
    multiassign08.eta;
    multiret08.eta;
    while01.eta;
}

etac ("Test -target linux -O") "-libpath $(testpath) -target linux -O" {
    if02.eta;
    if03.eta;
    if04.eta;
    localdecl13.eta;
    localdecl14.eta;
    multiassign06.eta;
    multiassign07.eta;
    multiassign08.eta;
    multiret08.eta;
    while01.eta;
}

