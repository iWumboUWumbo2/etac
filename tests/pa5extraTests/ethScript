build
etac ("Test -target linux -O") "-libpath $(testpath) --irgen -O" {
    _arr_outofbound1.eta;
    _arr_outofbound2.eta;
    _arr_outofbound3.eta;
    _arr_outofbound4.eta;
    _arr_outofbound5.eta;
    ack.eta;
    arr2d.eta;
    arr_alias.eta;
    arr_concat.eta;
    arr_double.eta;
    arr_empty.eta;
    arr_halfblank.eta;
    arr_init1.eta;
    arr_init2.eta;
    arr_init3.eta;
    arr_length.eta;
    arr_length2.eta;
    arr_multidim.eta;
    arr_nestedcall.eta;
    arr_print.eta;
    arr_ret1.eta;
    array1.eta;
    array2.eta;
    array3.eta;
    binary.eta;
    bool.eta;
    call.eta;
    call3.eta;
    callbasic.eta;
    char.eta;
    commute1.eta;
    commute2.eta;
    commute3.eta;
    even_or_odd.eta;
    ex01.eta;
    fib.eta;
    frac.eta;
    funcall1.eta;
    funcall2.eta;
    funcall3.eta;
    global1.eta;
    global2.eta;
    heap.eta;
    hello.eta;
    helloWorld.eta;
    if.eta;
    int1.eta;
    int2.eta;
    int3.eta;
    libtest.eta;
    moves.eta;
    print.eta;
    procdure.eta;
    recursion.eta;
    recursion2.eta;
    ret_tuple.eta;
    return1.eta;
    return2.eta;
    scope.eta;
    shortcir.eta;
    sideeffect.eta;
    sideeffect2.eta;
    stack.eta;
    wildcard.eta;
    wildcard2.eta;
}
etac ("Test --irgen") "-libpath $(testpath) --irgen" {
    _arr_outofbound1.eta;
    _arr_outofbound2.eta;
    _arr_outofbound3.eta;
    _arr_outofbound4.eta;
    _arr_outofbound5.eta;
    ack.eta;
    arr2d.eta;
    arr_alias.eta;
    arr_concat.eta;
    arr_double.eta;
    arr_empty.eta;
    arr_halfblank.eta;
    arr_init1.eta;
    arr_init2.eta;
    arr_init3.eta;
    arr_length.eta;
    arr_length2.eta;
    arr_multidim.eta;
    arr_nestedcall.eta;
    arr_print.eta;
    arr_ret1.eta;
    array1.eta;
    array2.eta;
    array3.eta;
    binary.eta;
    bool.eta;
    call.eta;
    call3.eta;
    callbasic.eta;
    char.eta;
    commute1.eta;
    commute2.eta;
    commute3.eta;
    even_or_odd.eta;
    ex01.eta;
    fib.eta;
    frac.eta;
    funcall1.eta;
    funcall2.eta;
    funcall3.eta;
    global1.eta;
    global2.eta;
    heap.eta;
    hello.eta;
    helloWorld.eta;
    if.eta;
    int1.eta;
    int2.eta;
    int3.eta;
    libtest.eta;
    moves.eta;
    print.eta;
    procdure.eta;
    recursion.eta;
    recursion2.eta;
    ret_tuple.eta;
    return1.eta;
    return2.eta;
    scope.eta;
    shortcir.eta;
    sideeffect.eta;
    sideeffect2.eta;
    stack.eta;
    wildcard.eta;
    wildcard2.eta;
}

etac ("Test -target linux") "-libpath $(testpath) -target linux" {
    _arr_outofbound1.eta;
    _arr_outofbound2.eta;
    _arr_outofbound3.eta;
    _arr_outofbound4.eta;
    _arr_outofbound5.eta;
    ack.eta;
    arr2d.eta;
    arr_alias.eta;
    arr_concat.eta;
    arr_double.eta;
    arr_empty.eta;
    arr_halfblank.eta;
    arr_init1.eta;
    arr_init2.eta;
    arr_init3.eta;
    arr_length.eta;
    arr_length2.eta;
    arr_multidim.eta;
    arr_nestedcall.eta;
    arr_print.eta;
    arr_ret1.eta;
    array1.eta;
    array2.eta;
    array3.eta;
    binary.eta;
    bool.eta;
    call.eta;
    call3.eta;
    callbasic.eta;
    char.eta;
    commute1.eta;
    commute2.eta;
    commute3.eta;
    even_or_odd.eta;
    ex01.eta;
    fib.eta;
    frac.eta;
    funcall1.eta;
    funcall2.eta;
    funcall3.eta;
    global1.eta;
    global2.eta;
    heap.eta;
    hello.eta;
    helloWorld.eta;
    if.eta;
    int1.eta;
    int2.eta;
    int3.eta;
    libtest.eta;
    moves.eta;
    print.eta;
    procdure.eta;
    recursion.eta;
    recursion2.eta;
    ret_tuple.eta;
    return1.eta;
    return2.eta;
    scope.eta;
    shortcir.eta;
    sideeffect.eta;
    sideeffect2.eta;
    stack.eta;
    wildcard.eta;
    wildcard2.eta;
}

etac ("Test -target linux -O") "-libpath $(testpath) -target linux -O" {
    _arr_outofbound1.eta;
    _arr_outofbound2.eta;
    _arr_outofbound3.eta;
    _arr_outofbound4.eta;
    _arr_outofbound5.eta;
    ack.eta;
    arr2d.eta;
    arr_alias.eta;
    arr_concat.eta;
    arr_double.eta;
    arr_empty.eta;
    arr_halfblank.eta;
    arr_init1.eta;
    arr_init2.eta;
    arr_init3.eta;
    arr_length.eta;
    arr_length2.eta;
    arr_multidim.eta;
    arr_nestedcall.eta;
    arr_print.eta;
    arr_ret1.eta;
    array1.eta;
    array2.eta;
    array3.eta;
    binary.eta;
    bool.eta;
    call.eta;
    call3.eta;
    callbasic.eta;
    char.eta;
    commute1.eta;
    commute2.eta;
    commute3.eta;
    even_or_odd.eta;
    ex01.eta;
    fib.eta;
    frac.eta;
    funcall1.eta;
    funcall2.eta;
    funcall3.eta;
    global1.eta;
    global2.eta;
    heap.eta;
    hello.eta;
    helloWorld.eta;
    if.eta;
    int1.eta;
    int2.eta;
    int3.eta;
    libtest.eta;
    moves.eta;
    print.eta;
    procdure.eta;
    recursion.eta;
    recursion2.eta;
    ret_tuple.eta;
    return1.eta;
    return2.eta;
    scope.eta;
    shortcir.eta;
    sideeffect.eta;
    sideeffect2.eta;
    stack.eta;
    wildcard.eta;
    wildcard2.eta;
}