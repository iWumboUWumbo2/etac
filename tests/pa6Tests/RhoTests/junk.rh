use io
use conv

record Point {
    x : int
    y : int
}

record PointArr {
    x : Point[];
}

foo(a : int, b:int) : int[] {
    c : int[]
    c = {a,b}
    return c;
}

main(args : int[][]) {
    a : Point = Point(3,4);
    b : Point = Point(5,6)
    c : PointArr = PointArr({a,b})
    d : Point = Point(7,11)

    //b = a;
    //println(unparseInt(b.x))        //2
    //println(unparseInt(c.x[0].x))   //2
    //println(unparseInt(c.x[0].y))   //3
    //println(unparseInt(c.x[1].x))   //2
    //println(unparseInt(c.x[1].y))   //3

    //b.x = 9;
    //println(unparseInt(a.x))        // ????
    //println(unparseInt(b.x))        //9
    //println(unparseInt(c.x[1].x))   //2

    //c.x[0] = d;
    //println(unparseInt(c.x[0].x))   //7
    //println(unparseInt(c.x[0].y))   //8

    c.x[0].x = 13;
    println(unparseInt(c.x[0].x))   //13
    //println(unparseInt(d.x))        //13

    //Doesn't type check????
    //foo(3,4)[0] = 5;

    //Works?
    //PointArr({a,b}).x[0].x = 2;
    // no type decl (PointArr, {a,b})
    // arraccesdecl (x, {0})
    // no type decl (x)
}