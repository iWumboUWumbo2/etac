use io
use conv

deleteFirst(list : int[]) : int[] {
    counter : int = 1
    temp : int[] = {};
    while (counter < length(list)) {
        temp = temp + {list[counter]};
        counter = counter + 1;
    }
    return temp
}

listToInt(list : int[]): int {
	if (length(list) == 0) {
        return 0
	}
    return listToInt(deleteFirst(list)) * 10 + list[0]
}


int_to_linked_list(num: int) : int[] {
    res : int[] = {num % 10}
    num = num / 10 //should be int divide here
    while (num > 0) {
        res = res + {num % 10}
        num = num / 10 //should be int divide here
    }
    return res;
}

addTwoNumbers(l1: int[], l2: int[]):int[] {
    num1 : int = listToInt(l1)
    num2 : int = listToInt(l2)
    return int_to_linked_list(num1 + num2)
}

main (args : int[][]) {
    a : int[] = {2,4,3}
    b : int[] = {5,6,4}
    c : int[] = {9,9,9,9,9,9,9}
    d : int[] = {9,9,9,9}
    e : int[] = {0}
    f : int[] = {1}

    g : int[] = addTwoNumbers(a,b); // 342 + 465 = 807 = [7,0,8]
    h : int[] = addTwoNumbers(c,d) // [8,9,9,9,0,0,0,1]
    lk : int[] = addTwoNumbers(e,f); // [1]

    i:int = 0;
    while (i < length(g)){
        print(unparseInt(g[i]) + " ")
        i = i+1
    }
    println("");
    i = 0;
    while (i < length(h)){
        print(unparseInt(h[i]) + " ")
        i = i+1
    }
    println("");
    i = 0;
    while (i < length(lk)){
        print(unparseInt(lk[i]) + " ")
        i = i+1
    }
    println("");

}